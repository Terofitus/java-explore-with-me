CREATE TABLE IF NOT EXISTS USERS
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(254) NOT NULL UNIQUE,
    name VARCHAR(250) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS CATEGORIES
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS LOCATIONS
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat INTEGER NOT NULL,
    lon INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS EVENTS
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created_on TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    initiator_id INTEGER REFERENCES USERS(id) NOT NULL,
    published_on TIMESTAMP WITHOUT TIME ZONE,
    state_enum  VARCHAR(60) NOT NULL,
    annotation VARCHAR(2000) NOT NULL,
    category_id INTEGER REFERENCES CATEGORIES(id) NOT NULL,
    description VARCHAR(7000) NOT NULL,
    event_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    paid BOOLEAN DEFAULT FALSE NOT NULL,
    participant_limit INTEGER DEFAULT 0 NOT NULL,
    request_moderation BOOLEAN DEFAULT TRUE NOT NULL,
    title VARCHAR(120) NOT NULL,
    views INTEGER NOT NULL,
    location_id INTEGER REFERENCES LOCATIONS(id)
);

CREATE TABLE IF NOT EXISTS COMPILATIONS
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(255) NOT NULL UNIQUE,
    pinned BOOLEAN DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS COMPILATIONS_EVENTS
(
    compilation_id INTEGER REFERENCES COMPILATIONS(id) ON DELETE CASCADE,
    event_id INTEGER REFERENCES EVENTS(id) ON DELETE CASCADE,
    CONSTRAINT pk_compilation_event PRIMARY KEY (compilation_id, event_id)
);

CREATE TABLE IF NOT EXISTS REQUESTS
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    event_id INTEGER REFERENCES EVENTS(id) ON DELETE CASCADE NOT NULL,
    requester_id INTEGER REFERENCES USERS(id) ON DELETE CASCADE NOT NULL,
    status_enum VARCHAR(60) NOT NULL
);